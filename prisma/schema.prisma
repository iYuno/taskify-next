generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  password      String?
}

model Project {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  projectName String
  description String
  userIDs     String[]    @db.ObjectId
  teamSpaces  Teamspace[]
}

model Teamspace {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  teamName    String
  description String
  userIDs     String[] @db.ObjectId
  Project     Project? @relation(fields: [projectId], references: [id])
  projectId   String?  @db.ObjectId
  Task        Task[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Task {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  creator     String    @db.ObjectId
  title       String
  description String
  teamSpace   Teamspace @relation(fields: [teamSpaceId], references: [id])
  teamSpaceId String    @db.ObjectId
}

model VerificationToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

// model PasswordResetToken {
//   id String @id @default(cuid())
//   email String
//   token String @unique
//   expires DateTime
//
//   @@unique([email, token])
// }
